"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[929],{1475:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"matchers/typeOf","title":"expect.typeOf(type)","description":"An asymmetric matcher that checks if the received value is of the specified type, using typeof.","source":"@site/docs/matchers/typeOf.mdx","sourceDirName":"matchers","slug":"/matchers/typeOf","permalink":"/mix-n-matchers/matchers/typeOf","draft":false,"unlisted":false,"editUrl":"https://github.com/EskiMojo14/mix-n-matchers/tree/main/website/docs/matchers/typeOf.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docs","previous":{"title":"expect.exactly(value)","permalink":"/mix-n-matchers/matchers/exactly"},"next":{"title":"expect.oneOf([values])","permalink":"/mix-n-matchers/matchers/oneOf"}}');var c=s(7968),r=s(4318),i=s(4679);const a={sidebar_position:2},o="expect.typeOf(type)",p={},h=[];function l(e){const t={code:"code",h1:"h1",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"expecttypeoftype",children:(0,c.jsx)(t.code,{children:"expect.typeOf(type)"})})}),"\n",(0,c.jsxs)(t.p,{children:["An asymmetric matcher that checks if the received value is of the specified type, using ",(0,c.jsx)(t.code,{children:"typeof"}),"."]}),"\n",(0,c.jsx)(i.Z,{name:"exactly",children:'\nit("is of the correct type", () => {\nconst values = {\n  number: 1,\n  string: "hello",\n  boolean: true,\n};\nexpect(values).toEqual({\n  number: expect.typeOf("number"),\n  string: expect.typeOf("string"),\n  boolean: expect.typeOf("boolean"),\n});\n});\n'})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}}}]);