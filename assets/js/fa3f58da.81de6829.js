"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[405],{5043:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>p,frontMatter:()=>u,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"matchers/enums","title":"Enums","description":".toBeEnum(enum)","source":"@site/docs/matchers/enums.mdx","sourceDirName":"matchers","slug":"/matchers/enums","permalink":"/mix-n-matchers/matchers/enums","draft":false,"unlisted":false,"editUrl":"https://github.com/EskiMojo14/mix-n-matchers/tree/main/website/docs/matchers/enums.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Records","permalink":"/mix-n-matchers/matchers/collections/records"},"next":{"title":"Mocks","permalink":"/mix-n-matchers/matchers/mocks"}}');var s=n(7968),a=n(4318),i=n(4679),o=n(6342),c=n(6503);const u={},l="Enums",m={},d=[{value:"<code>.toBeEnum(enum)</code>",id:"tobeenumenum",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"enums",children:"Enums"})}),"\n",(0,s.jsx)(t.h2,{id:"tobeenumenum",children:(0,s.jsx)(t.code,{children:".toBeEnum(enum)"})}),"\n",(0,s.jsxs)(t.p,{children:["Also available as an asymmetric matcher, ",(0,s.jsx)(t.code,{children:"expect.ofEnum(enum)"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Use ",(0,s.jsx)(t.code,{children:".toBeEnum"})," to assert that a value is a member of an enum (or const object)."]}),"\n",(0,s.jsx)(i.l,{files:{"/numeric.test.ts":'\nenum Direction {\nUp,\nDown,\nLeft,\nRight,\n}\n\nit("is a member of the numeric enum", () => {\nexpect(Direction.Up).toBeEnum(Direction);\n});\n',"/string.test.ts":'\nenum Direction {\nUp = "UP",\nDown = "DOWN",\nLeft = "LEFT",\nRight = "RIGHT",\n}\n\nit("is a member of the string enum", () => {\nexpect(Direction.Up).toBeEnum(Direction);\n});\n',"/heterogenous.test.ts":'\nenum Direction {\nUp = "UP",\nDown = 1,\nLeft = "LEFT",\nRight = 2,\n}\n\nit("is a member of the string enum", () => {\nexpect(Direction.Up).toBeEnum(Direction);\n});\n',"/const object.test.ts":'\nconst Direction = {\nUp: "UP",\nDown: "DOWN",\nLeft: "LEFT",\nRight: "RIGHT",\n} as const;\n\nit("is a member of the const object", () => {\nexpect(Direction.Up).toBeEnum(Direction);\n});\n'}}),"\n",(0,s.jsxs)(t.admonition,{type:"tip",children:[(0,s.jsxs)(t.mdxAdmonitionTitle,{children:["Aliasing ",(0,s.jsx)(t.code,{children:"expect.ofEnum"})," to ",(0,s.jsx)(t.code,{children:"expect.enum"})]}),(0,s.jsxs)(t.p,{children:["As ",(0,s.jsx)(t.code,{children:"enum"})," is a reserved word in Javascript, it is not possible to export a matcher with this name. However, you can alias it in your setup file:"]}),(0,s.jsxs)(o.A,{groupId:"test-runner",children:[(0,s.jsx)(c.A,{value:"Jest",default:!0,children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",metastring:'title="test-setup.ts"',children:'\nimport { exactly, ofEnum } from "mix-n-matchers";\nimport type { MixNMatchersFrom, AsymmetricMixNMatchersFrom } from "mix-n-matchers";\n\nconst matchers = {\n  exactly,\n  enum: ofEnum,\n};\n\nexpect.extend(matchers);\n\ndeclare global {\n  namespace jest {\n    interface Matchers<R, T> extends MixNMatchersFrom<typeof matchers, R, T> {}\n\n    interface Expect extends AsymmetricMixNMatchersFrom<typeof matchers> {\n      enum: AsymmetricMatchers["ofEnum"];\n    }\n\n    interface InverseAsymmetricMatchers\n      extends AsymmetricMixNMatchersFrom<typeof matchers> {\n      enum: AsymmetricMatchers["ofEnum"];\n    }\n  }\n}\n\n'})})}),(0,s.jsx)(c.A,{value:"Jest (no globals)",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",metastring:'title="test-setup.ts"',children:'\nimport { expect } from "@jest/globals";\nimport { exactly, ofEnum } from "mix-n-matchers";\nimport type { MixNMatchersFrom, AsymmetricMixNMatchersFrom } from "mix-n-matchers";\n\nconst matchers = {\n  exactly,\n  enum: ofEnum,\n};\n\nexpect.extend(matchers);\n\ndeclare module "@jest/expect" {\n  interface Matchers<R, T> extends MixNMatchersFrom<typeof matchers, R, T> {}\n  interface AsymmetricMatchers\n    extends AsymmetricMixNMatchersFrom<typeof matchers> {\n    enum: AsymmetricMatchers["ofEnum"];\n  }\n}\n\n'})})}),(0,s.jsx)(c.A,{value:"Vitest",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",metastring:'title="test-setup.ts"',children:'\nimport { expect } from "vitest";\nimport { exactly, ofEnum } from "mix-n-matchers";\nimport type { MixNMatchersFrom, AsymmetricMixNMatchersFrom } from "mix-n-matchers";\n\nconst matchers = {\n  exactly,\n  enum: ofEnum,\n};\n\nexpect.extend(matchers);\n\ndeclare module "vitest" {\n  interface Assertion<T> extends MixNMatchersFrom<typeof matchers, void, T> {}\n  interface AsymmetricMatchersContaining\n    extends AsymmetricMixNMatchersFrom<typeof matchers> {\n    enum: AsymmetricMatchers["ofEnum"];\n  }\n}\n\n'})})})]}),(0,s.jsxs)(t.p,{children:["After this setup, you should be able to use ",(0,s.jsx)(t.code,{children:"expect.enum"})," as a matcher."]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"expect(mock).toHaveBeenCalledWith(expect.enum(MyEnum));\n"})}),(0,s.jsxs)(t.p,{children:["This is automatically done for you with the ",(0,s.jsx)(t.a,{href:"/#automatic-setup",children:"auto-setup files"}),"."]})]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},6342:(e,t,n)=>{n.d(t,{A:()=>E});var r=n(4700),s=n(3372),a=n(3731),i=n(3263),o=n(7530),c=n(4212),u=n(8637),l=n(1487);function m(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)(()=>{const e=t??function(e){return m(e).map(({props:{value:e,label:t,attributes:n,default:r}})=>({value:e,label:t,attributes:n,default:r}))}(n);return function(e){const t=(0,u.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function h({value:e,tabValues:t}){return t.some(t=>t.value===e)}function p({queryString:e=!1,groupId:t}){const n=(0,i.W6)(),s=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,c.aZ)(s),(0,r.useCallback)(e=>{if(!s)return;const t=new URLSearchParams(n.location.search);t.set(s,e),n.replace({...n.location,search:t.toString()})},[s,n])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,a=d(e),[i,c]=(0,r.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:a})),[u,m]=p({queryString:n,groupId:s}),[f,x]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,s]=(0,l.Dv)(t);return[n,(0,r.useCallback)(e=>{t&&s.set(e)},[t,s])]}({groupId:s}),b=(()=>{const e=u??f;return h({value:e,tabValues:a})?e:null})();(0,o.A)(()=>{b&&c(b)},[b]);return{selectedValue:i,selectValue:(0,r.useCallback)(e=>{if(!h({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);c(e),m(e),x(e)},[m,x,a]),tabValues:a}}var x=n(1698);const b={tabList:"tabList_vooe",tabItem:"tabItem_xcYg"};var y=n(7968);function v({className:e,block:t,selectedValue:n,selectValue:r,tabValues:i}){const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),u=e=>{const t=e.currentTarget,s=o.indexOf(t),a=i[s].value;a!==n&&(c(t),r(a))},l=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;t=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;t=o[n]??o[o.length-1];break}}t?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},e),children:i.map(({value:e,label:t,attributes:r})=>(0,y.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{o.push(e)},onKeyDown:l,onClick:u,...r,className:(0,s.A)("tabs__item",b.tabItem,r?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function g({lazy:e,children:t,selectedValue:n}){const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=a.find(e=>e.props.value===n);return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:a.map((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function j(e){const t=f(e);return(0,y.jsxs)("div",{className:(0,s.A)("tabs-container",b.tabList),children:[(0,y.jsx)(v,{...t,...e}),(0,y.jsx)(g,{...t,...e})]})}function E(e){const t=(0,x.A)();return(0,y.jsx)(j,{...e,children:m(e.children)},String(t))}},6503:(e,t,n)=>{n.d(t,{A:()=>i});n(4700);var r=n(3372);const s={tabItem:"tabItem_ELpC"};var a=n(7968);function i({children:e,hidden:t,className:n}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,n),hidden:t,children:e})}}}]);